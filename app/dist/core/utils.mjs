import{mergeObject,parseUuid}from"../../common/utils/helpers.mjs";export async function fromUuid(e,{invalid:t=!1}={}){let s;const{collection:i,documentId:d,documentType:o,embedded:n}=parseUuid(e);for(s="CompendiumDocument"===i.name&&"Folder"===o?await i.getFolder(d,{strict:!0,dropInvalidEmbedded:!0}):await i.get(d,{strict:!0,dropInvalidEmbedded:!0});s&&n.length>1;){const[e,i]=n.splice(0,2);s=s.getEmbeddedDocument(e,i,{strict:!0,invalid:t}),s instanceof db.Token&&n.length&&await s.loadRelatedDocuments()}return s||null}export function tagModelStats(e,{changes:t,user:s,modifiedTime:i}={}){if(!e.schema.has("_stats"))return;const d=e._stats,{release:o,game:n}=global,m={modifiedTime:i??Date.now()};s&&(m.lastModifiedBy=s.id),d.createdTime||t||(m.createdTime=m.modifiedTime),d.coreVersion!==o.version&&(m.coreVersion=o.version),d.systemId!==n.system.id&&(m.systemId=n.system.id),d.systemVersion!==n.system.version&&(m.systemVersion=n.system.version),e.updateSource({_stats:m}),t&&mergeObject(t,{_stats:m})}