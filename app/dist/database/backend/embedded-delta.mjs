import{tagModelStats}from"../../core/utils.mjs";export default function EmbeddedDeltaMixin(e){return class extends e{async _preUpdate(e,t,s){await super._preUpdate(e,t,s);const i=this.parent.getEmbeddedCollection(this.parentCollection);i.manages(this.id)||i.set(this.id,this)}batchWrite(e,{restoreDelta:t=!1,...s}={}){const i=this.parent.getEmbeddedCollection(this.parentCollection);t&&!i.manages(this.id)?super.batchDelete(e):super.batchWrite(e,s)}batchDelete(e,{user:t,restoreDelta:s=!1}={}){const i=this.parent.getEmbeddedCollection(this.parentCollection);if(!s&&i.isTombstone(this.id)){const s=new foundry.data.TombstoneData({_id:this.id});tagModelStats(s,{user:t});const{dbKey:i,sublevelName:a}=this;this.constructor.batchWrite(s.toObject(),e,{dbKey:i,sublevelName:a})}else super.batchDelete(e)}}}