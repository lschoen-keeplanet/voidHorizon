import View from"./view.mjs";import sessions from"../../sessions.mjs";import{Module}from"../../packages/_module.mjs";export default class ApplicationUpdateView extends View{route="/update";socket="getUpdateData";_template="update";_methods=["get","post"];async handleGet(e,s){if(config.license.needsSignature)return s.redirect(`${e.baseUrl}/license`);if(global.game.world)return e.user?s.redirect(`${e.baseUrl}/game`):s.redirect(`${e.baseUrl}/join`);if(!sessions.authenticateAdmin(e,s).success)return s.redirect(`${e.baseUrl}/auth`);const t=View._getStaticContent({setup:!0}),a={layout:"setup",bodyClass:`update auth flexcol theme-${config.options.cssTheme}`,messages:sessions.getMessages(e,{clear:!1}),requireAuth:!1,scripts:t.scripts,styles:t.styles};s.render(this._template,a)}async handlePost(e,s){let t={};const{config:a,game:r}=global,{action:o,...i}=e.body,n=sessions.authenticateAdmin(e,s);if(!(!r.world&&n.success))return s.status(403),s.json({error:"You lack server administrator permission to submit this request."});switch(o){case"updateCheck":try{t=await a.updater.check(i),t||(t={info:"SETUP.UpdateNotAvailable"})}catch(e){t={error:e.message,stack:e.stack}}break;case"updateDownload":try{t=await a.updater.update()}catch(e){t={error:e.message,stack:e.stack}}break;default:t={error:`Unsupported ApplicationUpdateView action "${o}" submitted`}}return s.json(t)}async handleSocket(e,s){const t=global.config;if(t.adminPassword&&!e.admin||game.world)return s({});return s({options:t.options.vend(),release:global.release,addresses:t.express.getInvitationLinks(),coreUpdate:await t.updater.checkCoreUpdateAvailability(),worlds:[],systems:[],modules:Module.getPackages({coreTranslation:!0}).map((e=>e.vend()))})}}