import ServerError from"./error.mjs";import Activity from"../components/activity.mjs";import Files from"../files/files.mjs";import sessions from"../sessions.mjs";import ProseMirrorAuthority from"../components/prosemirror.mjs";import{HotReload}from"../packages/_module.mjs";export async function handleEvent(e,s,t,o){const r=this.user;if(!r)throw new Error(`Unrecognized User attacked to socket ${this.id} for event ${e}`);t.options=t.options||{};let i=t.options.broadcast??!0,n={userId:r?.id,request:t};try{n.result=await s(r,t)}catch(e){e=new ServerError(e.message,e.stack),logger.error(e),n.error=e,i=!1}return o?(o(n),i&&this.broadcast.emit(e,n)):i&&this.server.emit(e,n),n}export function handleCustomSocket(e,s,{recipients:t}={},o){if(t instanceof Array)for(let o of t){const t=game.users.find((e=>e.id===o));if(t)for(let o of t.sockets)o.emit(e,s,this.user.id)}else this.broadcast.emit(e,s,this.user.id);o instanceof Function&&o()}export async function activate(e,s){const t=e.handshake.query,o={sessionId:null,userId:null},r=sessions.sessions.get(t.session);if(!r)return e.emit("session",null);if(e.session=r,o.sessionId=r.id,game.world&&game.ready){const s=r.worlds[game.world.id],t=game.users.find((e=>e.id===s));t?(e.user=t,e.userId=o.userId=t.id):delete r.worlds[game.world.id]}e.emit("session",o);for(const t of s)t.socket&&e.on(t.socket,(e=>t.handleSocket(r,e)));e.on("getWorldStatus",requestWorldState),Files.socketListeners(e,handleEvent),o.userId&&(Activity.socketListeners(e),e.on("chatBubble",handleCustomSocket.bind(e,"chatBubble")),e.on("av",handleCustomSocket.bind(e,"av")),ProseMirrorAuthority.socketListeners(e),db.DatabaseBackend.socketListeners(e),db.Scene.socketListeners(e),db.JournalEntry.socketListeners(e),db.Playlist.socketListeners(e),db.FogExploration.socketListeners(e),db.Actor.socketListeners(e),packages.World.socketListeners(e,handleEvent))}function requestWorldState(e){return e(game.world&&game.ready)}