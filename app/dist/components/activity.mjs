export default class Activity{constructor(e){this.#e=e,this.#t=setInterval((()=>this.heartbeat(this)),15e3),this.#i()}#e;#t;users={};worldTime;#s;#i(){this.#s=Date.now(),db.Setting.getValue("core.time").then((e=>{if(this.worldTime=Number.isNumeric(e)?Number(e):0,null===e)return db.Setting.set("core.time",0)}))}get serverTime(){return Date.now()-this.#s}heartbeat(){if(game.world===this.#e){if(game.users)for(let e of game.users)e.id in this.users&&0===e.sockets.length&&this.deactivateUser(e)}else clearInterval(this.#t)}activateUser(e){const{express:t,game:i,db:s}=global;return"string"==typeof e&&(e=i.users.find((t=>t.id===e))),e instanceof s.User&&(!(e.id in this.users)&&(this.users[e.id]={},t.io.emit("userActivity",e.id,{active:!0}),!0))}deactivateUser(e){const{express:t,db:i}=global;if(!(e instanceof i.User))throw new Error("You must provide a User document instance to the deactivateUser method");return!e.sockets.length&&(e.id in this.users&&(delete this.users[e.id],t.io.emit("userActivity",e.id,{active:!1})),!0)}static socketListeners(e){this._onActivate(e,!0),e.on("disconnect",(()=>this._onActivate(e,!1))),e.on("userActivity",((t,i)=>this._handleUserActivity(e,t,i))),e.on("pause",(t=>this.pause(e,t))),e.on("time",this._onGameTime),e.on("reload",(()=>{e.user.isGM&&e.broadcast.emit("reload")}))}static _onActivate(e,t){const{game:i}=global;i.ready&&i.activity&&e.user&&(t?i.activity.activateUser(e.user):i.activity.deactivateUser(e.user))}static async _onGameTime(e){const{game:t}=global;return t.ready&&t.activity?e({serverTime:t.activity.serverTime,worldTime:t.activity.worldTime}):e({})}static pause(e,t){game.ready&&(global.logger.info(`Toggling game pause status to ${t}`),game.paused=t,e.broadcast.emit("pause",t))}static _handleUserActivity(e,t,i={}){if(!game.ready||!game.activity)return;const s=game.activity.users;t in s||(s[t]={});const a=s[t];for(let e of["sceneId","cursor","targets","av"])e in i&&(a[e]=i[e]);e.broadcast.emit("userActivity",t,i)}}