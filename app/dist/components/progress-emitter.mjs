import{mergeObject}from"../../common/utils/helpers.mjs";export default class ProgressEmitter{constructor(t,s,o,e={},i={}){this.#t=t,this.#s=s,this.#o=o,this.#e=e,this.#i=mergeObject({log:!0,decimalPlaces:0},i)}#t;#s;#o;#e;#i;#c;emit(t,{event:s="progress",force:o=!1,log:e,context:i={}}={}){const{express:c,logger:n}=global,{log:a,decimalPlaces:r,onProgress:l}=this.#i,h=Math.min(Number((t/this.#o*100).toFixed(r)),100),p=h!==this.#c,m={...this.#e,...i,pct:h,hasChanged:p,action:this.#t,step:this.#s};if(l instanceof Function&&l(m),o||p){if(a){const t=e??`${this.#t} ${this.#s} progress`;n.info(`${t} - ${h}%`)}c.io.emit(s,m),this.#c=h}}}