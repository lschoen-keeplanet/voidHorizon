import EventEmitter from"events";import path from"path";import Files from"../files/files.mjs";import fs from"fs";import{PACKAGE_TYPE_MAPPING}from"./_module.mjs";export default class PackageInstaller extends EventEmitter{constructor(t,s,i,e,r){super(),this._type=t,this._baseDir=s,this._id=i,this._localZip=e,this._auth=r}_id;_localZip;_auth;_type;_baseDir;#t={step:null,pct:0};async install(){let t;const s=CONST.SETUP_PACKAGE_PROGRESS.STEPS;this.#t={step:null,pct:0};try{if(this._id.startsWith(".."))throw new Error("You are not allowed to install packages outside of the designated directory path");const i=path.join(this._baseDir,this._id);let e="",r=await Files.summarizeArchive(this._localZip,{manifestPath:`${this._type}.json`});if(null===r.manifest){const t=r.contents.find((t=>t.endsWith(`${this._type}.json`)));e=`${path.dirname(t)}/`,r=await Files.summarizeArchive(this._localZip,{manifestPath:`${e}${this._type}.json`})}if(!r.manifest)throw fs.unlinkSync(this._localZip),new Error(`The downloaded package ${this._id} did not contain the expected ${this._type}.json manifest file.`);if(t=new PACKAGE_TYPE_MAPPING[this._type](JSON.parse(r.manifest),{installed:!1}),t.persistentStorage&&fs.existsSync(i)){const t=fs.readdirSync(i);for(let s of t){if("storage"===s)continue;const t=path.join(i,s);await fs.promises.rm(t,{recursive:!0})}}else await fs.promises.rm(i,{force:!0,recursive:!0});if(await Files.extractArchive(this._localZip,i,{removeRoot:e,onProgress:(t,i,e,r)=>this._progress(s.INSTALL,r)}),t.persistentStorage){const t=path.join(i,"storage");fs.existsSync(t)||fs.mkdirSync(t)}if(this._auth){const t=path.join(i,"signature.json"),s="signatureV2"in this._auth?{key:this._auth.key,package:this._id,signature:this._auth.signatureV2}:{key:this._auth.key,signature:this._auth.signature};fs.writeFileSync(t,JSON.stringify(s,null,2))}}catch(t){this.emit("error",t)}return this._progress(s.CLEANUP,100),fs.unlinkSync(this._localZip),this._progress(s.COMPLETE,100),t.vend()}_progress(t,s){this.#t.step===t&&this.#t.pct===s||(this.#t.step=t,this.#t.pct=s,this.emit("progress",t,s))}}