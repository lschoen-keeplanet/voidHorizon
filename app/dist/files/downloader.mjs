import EventEmitter from"events";import fs from"fs";import path from"path";import{fetchWithTimeout}from"../../common/utils/http.mjs";export default class FileDownloader extends EventEmitter{constructor(t,e){super(),this._url=t,this._localPath=e}_url;_localPath;download=()=>new Promise((async t=>{const e=path.dirname(this._localPath);if(!fs.existsSync(e))return this.emit("error",new Error(`Local directory ${e} does not exist!`)),void t();try{fs.accessSync(e,fs.constants.W_OK)}catch(r){return this.emit("error",new Error(`You do not have permission to write content in ${e}: ${r.message}`)),void t()}let r;try{r=await fetchWithTimeout(this._url,{referrerPolicy:"no-referrer"})}catch(e){return e.message=`An unexpected error occurred when downloading file ${this._url}: ${e.message}`,this.emit("error",e),void t()}this.emit("fetched");const o=r.headers.get("content-length")||1e8;let s=0,i=0;r.body.on("data",(t=>{s+=t.length;const e=Math.min(Math.round(100*s/o),99);e!==i&&(i=e,this.emit("progress",i))})),r.body.on("end",(()=>this.emit("progress",100)));const n=fs.createWriteStream(this._localPath);r.body.pipe(n),n.on("error",(t=>this.emit("error",t))),n.on("finish",(()=>{n.close(),t()}))}))}